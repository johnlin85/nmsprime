#
# LOG
#
# if mac of relay agent is different than mac of hardware than it's a device behind a modem
if ((exists agent.remote-id) and (not (binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)) = binary-to-ascii(16, 8, ":", option agent.remote-id)))) {
	set cm_mac = concat(
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 0, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 1, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 2, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 3, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 4, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(option agent.remote-id, 5, 1))), 2)
	);
	set hw_mac = concat(
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 1, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 2, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 3, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 4, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 5, 1))), 2), ":",
		suffix(concat("0", binary-to-ascii(16, 8, "", substring(hardware, 6, 1))), 2)
	);

	# log dhcp discover of device behind modem
	if (binary-to-ascii(10, 8, ".", option dhcp-message-type) = "1") {
		if (substring(option vendor-class-identifier, 0, 4) = "pktc") {
			log(info, concat("DHCPDISCOVER received of MTA ", hw_mac, " of Modem ", cm_mac));
		} else {
			log(info, concat("DHCPDISCOVER received of CPE ", hw_mac, " of Modem ", cm_mac));
		}
	}

	on commit {
		set ip = binary-to-ascii(10, 8, ".", leased-address);
		if (substring(option vendor-class-identifier, 0, 4) = "pktc") {
			log(info, concat("MTA ", hw_mac, " of Modem ", cm_mac, " is now ONLINE with IP ", ip));
		} else {
			log(info, concat("CPE ", hw_mac, " of Modem ", cm_mac, " is now ONLINE with IP ", ip));
			execute("/etc/named-ddns.sh", hw_mac, ip, "0");
			#execute("/var/www/nmsprime/vds.sh", binary-to-ascii(10, 32, ".", encode-int (lease-time, 32)), cm_mac, ip);
			on release or expiry {
				execute("/etc/named-ddns.sh", hw_mac, ip, "1");
			}
		}
	}
}

#
# DEBUG - bsas: Sniffing
#
#on commit {
#	execute("/usr/local/bin/sniff.sh", "commit",
#		binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)),
#		binary-to-ascii(10, 8, ".", leased-address),
#		pick-first-value(encode-int(lease-time, 32), "-"),
#		binary-to-ascii(16, 8, ":", packet(0, 1500))
#	);
#}

#on expiry {
#	execute("/usr/local/bin/sniff.sh", "expiry",
#		binary-to-ascii(10, 8, ".", leased-address),
#		encode-int(lease-time, 32),
#		binary-to-ascii(16, 8, ":", packet(0, 1500))
#	);
#}


#on release {
#	execute("/usr/local/bin/sniff.sh", "release",
#		binary-to-ascii(10, 8, ".", leased-address),
#		encode-int(lease-time, 32),
#		binary-to-ascii(16, 8, ":", packet(0, 1500))
#	);
#}
